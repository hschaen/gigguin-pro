rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isOrgMember(orgId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/organizations/$(orgId)/members/$(request.auth.uid));
    }
    
    function isOrgAdmin(orgId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/organizations/$(orgId)/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isOrgMember(resource.data.organizationId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isOrgAdmin(resource.data.organizationId);
      allow delete: if false; // Users cannot be deleted
    }
    
    // Organizations collection
    match /organizations/{orgId} {
      allow read: if isOrgMember(orgId);
      allow create: if isAuthenticated();
      allow update: if isOrgAdmin(orgId);
      allow delete: if false; // Organizations cannot be deleted
      
      // Organization members subcollection
      match /members/{memberId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgAdmin(orgId);
      }
    }
    
    // Events collection
    match /events/{eventId} {
      allow read: if isOrgMember(resource.data.organizationId) || 
                    resource.data.isPublic == true;
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow update: if isOrgMember(resource.data.organizationId);
      allow delete: if isOrgAdmin(resource.data.organizationId);
    }
    
    // Venues collection
    match /venues/{venueId} {
      allow read: if isOrgMember(resource.data.organizationId) || 
                    resource.data.isPublic == true;
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow update: if isOrgMember(resource.data.organizationId);
      allow delete: if isOrgAdmin(resource.data.organizationId);
    }
    
    // DJs collection
    match /djs/{djId} {
      allow read: if isOrgMember(resource.data.organizationId) || 
                    resource.data.isPublic == true;
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow update: if isOrgMember(resource.data.organizationId);
      allow delete: if isOrgAdmin(resource.data.organizationId);
    }
    
    // Contracts collection
    match /contracts/{contractId} {
      allow read: if isOrgMember(resource.data.organizationId);
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow update: if isOrgMember(resource.data.organizationId);
      allow delete: if isOrgAdmin(resource.data.organizationId);
    }
    
    // Public Pages collection
    match /public_pages/{pageId} {
      allow read: if resource.data.isPublished == true || 
                    isOrgMember(resource.data.organizationId);
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow update: if isOrgMember(resource.data.organizationId);
      allow delete: if isOrgAdmin(resource.data.organizationId);
    }
  }
}